[gd_scene load_steps=16 format=2]

[ext_resource path="res://perspective.gdshader" type="Shader" id=1]
[ext_resource path="res://MeshInstance.gd" type="Script" id=2]
[ext_resource path="res://grid.obj" type="ArrayMesh" id=3]
[ext_resource path="res://asset_sources/xic_prospector_ma.obj" type="ArrayMesh" id=4]
[ext_resource path="res://Spaceship.gd" type="Script" id=5]
[ext_resource path="res://Background.gd" type="Script" id=6]
[ext_resource path="res://assets/ScreamingBrain/Blue Nebula/1024x1024 Blue Nebula 1.png" type="Texture" id=7]

[sub_resource type="Shader" id=12]
code = "shader_type canvas_item;

uniform vec2 position;
uniform sampler2D nebula;
const int LAYERS = 5;
const float DEPTH_FACTOR = 0.7;
const float DEPTH_OFFSET = 0.0;

void fragment(){
	COLOR = vec4(0,0,0,0);
	vec2 shifted_uv_front = UV;
	for (int i = 1; i <= LAYERS; i ++){
		
		// Offset stars by player position
		vec2 shifted_uv = UV;
		shifted_uv.x += (
			position.x / (DEPTH_OFFSET + float(i) / DEPTH_FACTOR) * TEXTURE_PIXEL_SIZE.x
		);
		shifted_uv.y += (
			position.y / (DEPTH_OFFSET + float(i) / DEPTH_FACTOR) * TEXTURE_PIXEL_SIZE.y
		);

		// Extra offset to avoid stacking
		shifted_uv += (TEXTURE_PIXEL_SIZE * float(i) * 250.0);

		shifted_uv.x = fract(shifted_uv.x);
		shifted_uv.y = fract(shifted_uv.y);
		
		// Invert every other layer
		if(bool(i % 2)){
			shifted_uv.x = 1.0 - shifted_uv.x;
			shifted_uv.y = 1.0 - shifted_uv.y;
		}
		if(bool(i % 3)){
			if (shifted_uv.x > 1.0 || shifted_uv.y < 0.0 || shifted_uv.y > 1.0 || shifted_uv.y < 0.0){
				//COLOR = vec4(1,1,1,1)
			}
			COLOR += texture(nebula, shifted_uv) / (float(i) + 0.5)
		} else {
			COLOR += texture(TEXTURE, shifted_uv) / (float(i) + 0.5)
		}
	}
}
"

[sub_resource type="ShaderMaterial" id=13]
shader = SubResource( 12 )
shader_param/position = null
shader_param/nebula = ExtResource( 7 )

[sub_resource type="Environment" id=9]
background_mode = 4
background_canvas_max_layer = -1

[sub_resource type="ShaderMaterial" id=6]
shader = ExtResource( 1 )
shader_param/xform = null
shader_param/inv_xform = null
shader_param/S = 0.5

[sub_resource type="PrismMesh" id=7]

[sub_resource type="ShaderMaterial" id=3]
shader = ExtResource( 1 )
shader_param/xform = null
shader_param/inv_xform = null
shader_param/S = 0.5

[sub_resource type="ShaderMaterial" id=4]
shader = ExtResource( 1 )
shader_param/xform = null
shader_param/inv_xform = null
shader_param/S = 0.5

[sub_resource type="ShaderMaterial" id=5]
shader = ExtResource( 1 )
shader_param/xform = null
shader_param/inv_xform = null
shader_param/S = 0.5

[node name="Node" type="Node"]

[node name="Background" type="CanvasLayer" parent="."]
layer = -1

[node name="Background" type="TextureRect" parent="Background"]
material = SubResource( 13 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 7 )
stretch_mode = 3
script = ExtResource( 6 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 9 )

[node name="3d" type="Spatial" parent="."]

[node name="CameraTransform" type="Spatial" parent="3d"]

[node name="Camera" type="Camera" parent="3d/CameraTransform"]
transform = Transform( 0.707107, 0.5, -0.5, 0, 0.707107, 0.707107, 0.707107, -0.5, 0.5, -4, 4, 4 )
projection = 1
size = 9.82505
far = 500.0

[node name="Spaceship" type="KinematicBody" parent="3d"]
script = ExtResource( 5 )

[node name="Graphics" type="MeshInstance" parent="3d/Spaceship"]
transform = Transform( -1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 0, 0 )
mesh = ExtResource( 4 )
skeleton = NodePath("../..")
material/0 = SubResource( 6 )
script = ExtResource( 2 )
spin_aimlessly = false

[node name="CameraFollower" type="RemoteTransform" parent="3d/Spaceship"]
remote_path = NodePath("../../CameraTransform")
update_rotation = false
update_scale = false

[node name="MeshInstance" type="MeshInstance" parent="3d/Spaceship"]
transform = Transform( -4.37114e-08, 1, -4.37114e-08, 0, -1.10364e-08, -0.252484, -0.470493, -2.05659e-08, 8.98964e-16, 3.8294, 0, 0 )
visible = false
mesh = SubResource( 7 )
material/0 = null

[node name="MeshInstance3" type="MeshInstance" parent="3d"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.507011, 0, -1.71519 )
mesh = ExtResource( 3 )
material/0 = SubResource( 3 )
script = ExtResource( 2 )

[node name="MeshInstance4" type="MeshInstance" parent="3d"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.507011, 0, 3.72169 )
mesh = ExtResource( 3 )
material/0 = SubResource( 4 )
script = ExtResource( 2 )

[node name="Asteroid" type="RigidBody" parent="3d"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -3.12977 )
axis_lock_linear_y = true

[node name="MeshInstance2" type="MeshInstance" parent="3d/Asteroid"]
mesh = ExtResource( 3 )
skeleton = NodePath("../..")
material/0 = SubResource( 5 )
script = ExtResource( 2 )

[node name="DirectionalLight" type="DirectionalLight" parent="3d"]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0 )
